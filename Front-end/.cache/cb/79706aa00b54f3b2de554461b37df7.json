{"id":"node_modules/mqtt-packet/parser.js","dependencies":[{"name":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/package.json","includedInParent":true,"mtime":1646316396171},{"name":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/package.json","includedInParent":true,"mtime":499162500000},{"name":"bl","loc":{"line":1,"column":19,"index":19},"parent":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/parser.js","resolved":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/bl/bl.js"},{"name":"events","loc":{"line":2,"column":29,"index":54},"parent":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/parser.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"./packet","loc":{"line":3,"column":23,"index":87},"parent":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/parser.js","resolved":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/packet.js"},{"name":"./constants","loc":{"line":4,"column":26,"index":125},"parent":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/parser.js","resolved":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/constants.js"},{"name":"debug","loc":{"line":5,"column":22,"index":162},"parent":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/parser.js","resolved":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/debug/src/browser.js"}],"generated":{"js":"const bl = require('bl')\nconst EventEmitter = require('events')\nconst Packet = require('./packet')\nconst constants = require('./constants')\nconst debug = require('debug')('mqtt-packet:parser')\n\nclass Parser extends EventEmitter {\n  constructor () {\n    super()\n    this.parser = this.constructor.parser\n  }\n\n  static parser (opt) {\n    if (!(this instanceof Parser)) return (new Parser()).parser(opt)\n\n    this.settings = opt || {}\n\n    this._states = [\n      '_parseHeader',\n      '_parseLength',\n      '_parsePayload',\n      '_newPacket'\n    ]\n\n    this._resetState()\n    return this\n  }\n\n  _resetState () {\n    debug('_resetState: resetting packet, error, _list, and _stateCounter')\n    this.packet = new Packet()\n    this.error = null\n    this._list = bl()\n    this._stateCounter = 0\n  }\n\n  parse (buf) {\n    if (this.error) this._resetState()\n\n    this._list.append(buf)\n    debug('parse: current state: %s', this._states[this._stateCounter])\n    while ((this.packet.length !== -1 || this._list.length > 0) &&\n      this[this._states[this._stateCounter]]() &&\n      !this.error) {\n      this._stateCounter++\n      debug('parse: state complete. _stateCounter is now: %d', this._stateCounter)\n      debug('parse: packet.length: %d, buffer list length: %d', this.packet.length, this._list.length)\n      if (this._stateCounter >= this._states.length) this._stateCounter = 0\n    }\n    debug('parse: exited while loop. packet: %d, buffer list length: %d', this.packet.length, this._list.length)\n    return this._list.length\n  }\n\n  _parseHeader () {\n    // There is at least one byte in the buffer\n    const zero = this._list.readUInt8(0)\n    this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]\n    this.packet.retain = (zero & constants.RETAIN_MASK) !== 0\n    this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK\n    this.packet.dup = (zero & constants.DUP_MASK) !== 0\n    debug('_parseHeader: packet: %o', this.packet)\n\n    this._list.consume(1)\n\n    return true\n  }\n\n  _parseLength () {\n    // There is at least one byte in the list\n    const result = this._parseVarByteNum(true)\n\n    if (result) {\n      this.packet.length = result.value\n      this._list.consume(result.bytes)\n    }\n    debug('_parseLength %d', result.value)\n    return !!result\n  }\n\n  _parsePayload () {\n    debug('_parsePayload: payload %O', this._list)\n    let result = false\n\n    // Do we have a payload? Do we have enough data to complete the payload?\n    // PINGs have no payload\n    if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n      this._pos = 0\n\n      switch (this.packet.cmd) {\n        case 'connect':\n          this._parseConnect()\n          break\n        case 'connack':\n          this._parseConnack()\n          break\n        case 'publish':\n          this._parsePublish()\n          break\n        case 'puback':\n        case 'pubrec':\n        case 'pubrel':\n        case 'pubcomp':\n          this._parseConfirmation()\n          break\n        case 'subscribe':\n          this._parseSubscribe()\n          break\n        case 'suback':\n          this._parseSuback()\n          break\n        case 'unsubscribe':\n          this._parseUnsubscribe()\n          break\n        case 'unsuback':\n          this._parseUnsuback()\n          break\n        case 'pingreq':\n        case 'pingresp':\n          // These are empty, nothing to do\n          break\n        case 'disconnect':\n          this._parseDisconnect()\n          break\n        case 'auth':\n          this._parseAuth()\n          break\n        default:\n          this._emitError(new Error('Not supported'))\n      }\n\n      result = true\n    }\n    debug('_parsePayload complete result: %s', result)\n    return result\n  }\n\n  _parseConnect () {\n    debug('_parseConnect')\n    let topic // Will topic\n    let payload // Will payload\n    let password // Password\n    let username // Username\n    const flags = {}\n    const packet = this.packet\n\n    // Parse protocolId\n    const protocolId = this._parseString()\n\n    if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'))\n    if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n      return this._emitError(new Error('Invalid protocolId'))\n    }\n\n    packet.protocolId = protocolId\n\n    // Parse constants version number\n    if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'))\n\n    packet.protocolVersion = this._list.readUInt8(this._pos)\n\n    if (packet.protocolVersion >= 128) {\n      packet.bridgeMode = true\n      packet.protocolVersion = packet.protocolVersion - 128\n    }\n\n    if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {\n      return this._emitError(new Error('Invalid protocol version'))\n    }\n\n    this._pos++\n\n    if (this._pos >= this._list.length) {\n      return this._emitError(new Error('Packet too short'))\n    }\n\n    // Parse connect flags\n    flags.username = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)\n    flags.password = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)\n    flags.will = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)\n\n    if (flags.will) {\n      packet.will = {}\n      packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0\n      packet.will.qos = (this._list.readUInt8(this._pos) &\n        constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT\n    }\n\n    packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0\n    this._pos++\n\n    // Parse keepalive\n    packet.keepalive = this._parseNum()\n    if (packet.keepalive === -1) return this._emitError(new Error('Packet too short'))\n\n    // parse properties\n    if (packet.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n    // Parse clientId\n    const clientId = this._parseString()\n    if (clientId === null) return this._emitError(new Error('Packet too short'))\n    packet.clientId = clientId\n    debug('_parseConnect: packet.clientId: %s', packet.clientId)\n\n    if (flags.will) {\n      if (packet.protocolVersion === 5) {\n        const willProperties = this._parseProperties()\n        if (Object.getOwnPropertyNames(willProperties).length) {\n          packet.will.properties = willProperties\n        }\n      }\n      // Parse will topic\n      topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse will topic'))\n      packet.will.topic = topic\n      debug('_parseConnect: packet.will.topic: %s', packet.will.topic)\n\n      // Parse will payload\n      payload = this._parseBuffer()\n      if (payload === null) return this._emitError(new Error('Cannot parse will payload'))\n      packet.will.payload = payload\n      debug('_parseConnect: packet.will.paylaod: %s', packet.will.payload)\n    }\n\n    // Parse username\n    if (flags.username) {\n      username = this._parseString()\n      if (username === null) return this._emitError(new Error('Cannot parse username'))\n      packet.username = username\n      debug('_parseConnect: packet.username: %s', packet.username)\n    }\n\n    // Parse password\n    if (flags.password) {\n      password = this._parseBuffer()\n      if (password === null) return this._emitError(new Error('Cannot parse password'))\n      packet.password = password\n    }\n    // need for right parse auth packet and self set up\n    this.settings = packet\n    debug('_parseConnect: complete')\n    return packet\n  }\n\n  _parseConnack () {\n    debug('_parseConnack')\n    const packet = this.packet\n\n    if (this._list.length < 1) return null\n    packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)\n\n    if (this.settings.protocolVersion === 5) {\n      if (this._list.length >= 2) {\n        packet.reasonCode = this._list.readUInt8(this._pos++)\n      } else {\n        packet.reasonCode = 0\n      }\n    } else {\n      if (this._list.length < 2) return null\n      packet.returnCode = this._list.readUInt8(this._pos++)\n    }\n\n    if (packet.returnCode === -1 || packet.reasonCode === -1) return this._emitError(new Error('Cannot parse return code'))\n    // mqtt 5 properties\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n    debug('_parseConnack: complete')\n  }\n\n  _parsePublish () {\n    debug('_parsePublish')\n    const packet = this.packet\n    packet.topic = this._parseString()\n\n    if (packet.topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n    // Parse messageId\n    if (packet.qos > 0) if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    packet.payload = this._list.slice(this._pos, packet.length)\n    debug('_parsePublish: payload from buffer list: %o', packet.payload)\n  }\n\n  _parseSubscribe () {\n    debug('_parseSubscribe')\n    const packet = this.packet\n    let topic\n    let options\n    let qos\n    let rh\n    let rap\n    let nl\n    let subscription\n\n    if (packet.qos !== 1) {\n      return this._emitError(new Error('Wrong subscribe header'))\n    }\n\n    packet.subscriptions = []\n\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    while (this._pos < packet.length) {\n      // Parse topic\n      topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n      if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))\n\n      options = this._parseByte()\n      qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK\n      nl = ((options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT) & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0\n      rap = ((options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT) & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0\n      rh = (options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT) & constants.SUBSCRIBE_OPTIONS_RH_MASK\n\n      subscription = { topic, qos }\n\n      // mqtt 5 options\n      if (this.settings.protocolVersion === 5) {\n        subscription.nl = nl\n        subscription.rap = rap\n        subscription.rh = rh\n      } else if (this.settings.bridgeMode) {\n        subscription.rh = 0\n        subscription.rap = true\n        subscription.nl = true\n      }\n\n      // Push pair to subscriptions\n      debug('_parseSubscribe: push subscription `%s` to subscription', subscription)\n      packet.subscriptions.push(subscription)\n    }\n  }\n\n  _parseSuback () {\n    debug('_parseSuback')\n    const packet = this.packet\n    this.packet.granted = []\n\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    // Parse granted QoSes\n    while (this._pos < this.packet.length) {\n      this.packet.granted.push(this._list.readUInt8(this._pos++))\n    }\n  }\n\n  _parseUnsubscribe () {\n    debug('_parseUnsubscribe')\n    const packet = this.packet\n\n    packet.unsubscriptions = []\n\n    // Parse messageId\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    while (this._pos < packet.length) {\n      // Parse topic\n      const topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n      // Push topic to unsubscriptions\n      debug('_parseUnsubscribe: push topic `%s` to unsubscriptions', topic)\n      packet.unsubscriptions.push(topic)\n    }\n  }\n\n  _parseUnsuback () {\n    debug('_parseUnsuback')\n    const packet = this.packet\n    if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'))\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n      // Parse granted QoSes\n      packet.granted = []\n      while (this._pos < this.packet.length) {\n        this.packet.granted.push(this._list.readUInt8(this._pos++))\n      }\n    }\n  }\n\n  // parse packets like puback, pubrec, pubrel, pubcomp\n  _parseConfirmation () {\n    debug('_parseConfirmation: packet.cmd: `%s`', this.packet.cmd)\n    const packet = this.packet\n\n    this._parseMessageId()\n\n    if (this.settings.protocolVersion === 5) {\n      if (packet.length > 2) {\n        // response code\n        packet.reasonCode = this._parseByte()\n        debug('_parseConfirmation: packet.reasonCode `%d`', packet.reasonCode)\n      } else {\n        packet.reasonCode = 0\n      }\n\n      if (packet.length > 3) {\n        // properies mqtt 5\n        const properties = this._parseProperties()\n        if (Object.getOwnPropertyNames(properties).length) {\n          packet.properties = properties\n        }\n      }\n    }\n\n    return true\n  }\n\n  // parse disconnect packet\n  _parseDisconnect () {\n    const packet = this.packet\n    debug('_parseDisconnect')\n\n    if (this.settings.protocolVersion === 5) {\n      // response code\n      if (this._list.length > 0) {\n        packet.reasonCode = this._parseByte()\n      } else {\n        packet.reasonCode = 0\n      }\n      // properies mqtt 5\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    debug('_parseDisconnect result: true')\n    return true\n  }\n\n  // parse auth packet\n  _parseAuth () {\n    debug('_parseAuth')\n    const packet = this.packet\n\n    if (this.settings.protocolVersion !== 5) {\n      return this._emitError(new Error('Not supported auth packet for this version MQTT'))\n    }\n\n    // response code\n    packet.reasonCode = this._parseByte()\n    // properies mqtt 5\n    const properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n\n    debug('_parseAuth: result: true')\n    return true\n  }\n\n  _parseMessageId () {\n    const packet = this.packet\n\n    packet.messageId = this._parseNum()\n\n    if (packet.messageId === null) {\n      this._emitError(new Error('Cannot parse messageId'))\n      return false\n    }\n\n    debug('_parseMessageId: packet.messageId %d', packet.messageId)\n    return true\n  }\n\n  _parseString (maybeBuffer) {\n    const length = this._parseNum()\n    const end = length + this._pos\n\n    if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n    const result = this._list.toString('utf8', this._pos, end)\n    this._pos += length\n    debug('_parseString: result: %s', result)\n    return result\n  }\n\n  _parseStringPair () {\n    debug('_parseStringPair')\n    return {\n      name: this._parseString(),\n      value: this._parseString()\n    }\n  }\n\n  _parseBuffer () {\n    const length = this._parseNum()\n    const end = length + this._pos\n\n    if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n    const result = this._list.slice(this._pos, end)\n\n    this._pos += length\n    debug('_parseBuffer: result: %o', result)\n    return result\n  }\n\n  _parseNum () {\n    if (this._list.length - this._pos < 2) return -1\n\n    const result = this._list.readUInt16BE(this._pos)\n    this._pos += 2\n    debug('_parseNum: result: %s', result)\n    return result\n  }\n\n  _parse4ByteNum () {\n    if (this._list.length - this._pos < 4) return -1\n\n    const result = this._list.readUInt32BE(this._pos)\n    this._pos += 4\n    debug('_parse4ByteNum: result: %s', result)\n    return result\n  }\n\n  _parseVarByteNum (fullInfoFlag) {\n    debug('_parseVarByteNum')\n    const maxBytes = 4\n    let bytes = 0\n    let mul = 1\n    let value = 0\n    let result = false\n    let current\n    const padding = this._pos ? this._pos : 0\n\n    while (bytes < maxBytes && (padding + bytes) < this._list.length) {\n      current = this._list.readUInt8(padding + bytes++)\n      value += mul * (current & constants.VARBYTEINT_MASK)\n      mul *= 0x80\n\n      if ((current & constants.VARBYTEINT_FIN_MASK) === 0) {\n        result = true\n        break\n      }\n      if (this._list.length <= bytes) {\n        break\n      }\n    }\n\n    if (!result && bytes === maxBytes && this._list.length >= bytes) {\n      this._emitError(new Error('Invalid variable byte integer'))\n    }\n\n    if (padding) {\n      this._pos += bytes\n    }\n\n    result = result\n      ? fullInfoFlag ? {\n        bytes,\n        value\n      } : value\n      : false\n\n    debug('_parseVarByteNum: result: %o', result)\n    return result\n  }\n\n  _parseByte () {\n    let result\n    if (this._pos < this._list.length) {\n      result = this._list.readUInt8(this._pos)\n      this._pos++\n    }\n    debug('_parseByte: result: %o', result)\n    return result\n  }\n\n  _parseByType (type) {\n    debug('_parseByType: type: %s', type)\n    switch (type) {\n      case 'byte': {\n        return this._parseByte() !== 0\n      }\n      case 'int8': {\n        return this._parseByte()\n      }\n      case 'int16': {\n        return this._parseNum()\n      }\n      case 'int32': {\n        return this._parse4ByteNum()\n      }\n      case 'var': {\n        return this._parseVarByteNum()\n      }\n      case 'string': {\n        return this._parseString()\n      }\n      case 'pair': {\n        return this._parseStringPair()\n      }\n      case 'binary': {\n        return this._parseBuffer()\n      }\n    }\n  }\n\n  _parseProperties () {\n    debug('_parseProperties')\n    const length = this._parseVarByteNum()\n    const start = this._pos\n    const end = start + length\n    const result = {}\n    while (this._pos < end) {\n      const type = this._parseByte()\n      if (!type) {\n        this._emitError(new Error('Cannot parse property code type'))\n        return false\n      }\n      const name = constants.propertiesCodes[type]\n      if (!name) {\n        this._emitError(new Error('Unknown property'))\n        return false\n      }\n      // user properties process\n      if (name === 'userProperties') {\n        if (!result[name]) {\n          result[name] = Object.create(null)\n        }\n        const currentUserProperty = this._parseByType(constants.propertiesTypes[name])\n        if (result[name][currentUserProperty.name]) {\n          if (Array.isArray(result[name][currentUserProperty.name])) {\n            result[name][currentUserProperty.name].push(currentUserProperty.value)\n          } else {\n            const currentValue = result[name][currentUserProperty.name]\n            result[name][currentUserProperty.name] = [currentValue]\n            result[name][currentUserProperty.name].push(currentUserProperty.value)\n          }\n        } else {\n          result[name][currentUserProperty.name] = currentUserProperty.value\n        }\n        continue\n      }\n      if (result[name]) {\n        if (Array.isArray(result[name])) {\n          result[name].push(this._parseByType(constants.propertiesTypes[name]))\n        } else {\n          result[name] = [result[name]]\n          result[name].push(this._parseByType(constants.propertiesTypes[name]))\n        }\n      } else {\n        result[name] = this._parseByType(constants.propertiesTypes[name])\n      }\n    }\n    return result\n  }\n\n  _newPacket () {\n    debug('_newPacket')\n    if (this.packet) {\n      this._list.consume(this.packet.length)\n      debug('_newPacket: parser emit packet: packet.cmd: %s, packet.payload: %s, packet.length: %d', this.packet.cmd, this.packet.payload, this.packet.length)\n      this.emit('packet', this.packet)\n    }\n    debug('_newPacket: new packet')\n    this.packet = new Packet()\n\n    this._pos = 0\n\n    return true\n  }\n\n  _emitError (err) {\n    debug('_emitError')\n    this.error = err\n    this.emit('error', err)\n  }\n}\n\nmodule.exports = Parser\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mqtt-packet/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/mqtt-packet/parser.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}}],"sources":{"node_modules/mqtt-packet/parser.js":"const bl = require('bl')\nconst EventEmitter = require('events')\nconst Packet = require('./packet')\nconst constants = require('./constants')\nconst debug = require('debug')('mqtt-packet:parser')\n\nclass Parser extends EventEmitter {\n  constructor () {\n    super()\n    this.parser = this.constructor.parser\n  }\n\n  static parser (opt) {\n    if (!(this instanceof Parser)) return (new Parser()).parser(opt)\n\n    this.settings = opt || {}\n\n    this._states = [\n      '_parseHeader',\n      '_parseLength',\n      '_parsePayload',\n      '_newPacket'\n    ]\n\n    this._resetState()\n    return this\n  }\n\n  _resetState () {\n    debug('_resetState: resetting packet, error, _list, and _stateCounter')\n    this.packet = new Packet()\n    this.error = null\n    this._list = bl()\n    this._stateCounter = 0\n  }\n\n  parse (buf) {\n    if (this.error) this._resetState()\n\n    this._list.append(buf)\n    debug('parse: current state: %s', this._states[this._stateCounter])\n    while ((this.packet.length !== -1 || this._list.length > 0) &&\n      this[this._states[this._stateCounter]]() &&\n      !this.error) {\n      this._stateCounter++\n      debug('parse: state complete. _stateCounter is now: %d', this._stateCounter)\n      debug('parse: packet.length: %d, buffer list length: %d', this.packet.length, this._list.length)\n      if (this._stateCounter >= this._states.length) this._stateCounter = 0\n    }\n    debug('parse: exited while loop. packet: %d, buffer list length: %d', this.packet.length, this._list.length)\n    return this._list.length\n  }\n\n  _parseHeader () {\n    // There is at least one byte in the buffer\n    const zero = this._list.readUInt8(0)\n    this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]\n    this.packet.retain = (zero & constants.RETAIN_MASK) !== 0\n    this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK\n    this.packet.dup = (zero & constants.DUP_MASK) !== 0\n    debug('_parseHeader: packet: %o', this.packet)\n\n    this._list.consume(1)\n\n    return true\n  }\n\n  _parseLength () {\n    // There is at least one byte in the list\n    const result = this._parseVarByteNum(true)\n\n    if (result) {\n      this.packet.length = result.value\n      this._list.consume(result.bytes)\n    }\n    debug('_parseLength %d', result.value)\n    return !!result\n  }\n\n  _parsePayload () {\n    debug('_parsePayload: payload %O', this._list)\n    let result = false\n\n    // Do we have a payload? Do we have enough data to complete the payload?\n    // PINGs have no payload\n    if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n      this._pos = 0\n\n      switch (this.packet.cmd) {\n        case 'connect':\n          this._parseConnect()\n          break\n        case 'connack':\n          this._parseConnack()\n          break\n        case 'publish':\n          this._parsePublish()\n          break\n        case 'puback':\n        case 'pubrec':\n        case 'pubrel':\n        case 'pubcomp':\n          this._parseConfirmation()\n          break\n        case 'subscribe':\n          this._parseSubscribe()\n          break\n        case 'suback':\n          this._parseSuback()\n          break\n        case 'unsubscribe':\n          this._parseUnsubscribe()\n          break\n        case 'unsuback':\n          this._parseUnsuback()\n          break\n        case 'pingreq':\n        case 'pingresp':\n          // These are empty, nothing to do\n          break\n        case 'disconnect':\n          this._parseDisconnect()\n          break\n        case 'auth':\n          this._parseAuth()\n          break\n        default:\n          this._emitError(new Error('Not supported'))\n      }\n\n      result = true\n    }\n    debug('_parsePayload complete result: %s', result)\n    return result\n  }\n\n  _parseConnect () {\n    debug('_parseConnect')\n    let topic // Will topic\n    let payload // Will payload\n    let password // Password\n    let username // Username\n    const flags = {}\n    const packet = this.packet\n\n    // Parse protocolId\n    const protocolId = this._parseString()\n\n    if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'))\n    if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n      return this._emitError(new Error('Invalid protocolId'))\n    }\n\n    packet.protocolId = protocolId\n\n    // Parse constants version number\n    if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'))\n\n    packet.protocolVersion = this._list.readUInt8(this._pos)\n\n    if (packet.protocolVersion >= 128) {\n      packet.bridgeMode = true\n      packet.protocolVersion = packet.protocolVersion - 128\n    }\n\n    if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {\n      return this._emitError(new Error('Invalid protocol version'))\n    }\n\n    this._pos++\n\n    if (this._pos >= this._list.length) {\n      return this._emitError(new Error('Packet too short'))\n    }\n\n    // Parse connect flags\n    flags.username = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)\n    flags.password = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)\n    flags.will = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)\n\n    if (flags.will) {\n      packet.will = {}\n      packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0\n      packet.will.qos = (this._list.readUInt8(this._pos) &\n        constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT\n    }\n\n    packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0\n    this._pos++\n\n    // Parse keepalive\n    packet.keepalive = this._parseNum()\n    if (packet.keepalive === -1) return this._emitError(new Error('Packet too short'))\n\n    // parse properties\n    if (packet.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n    // Parse clientId\n    const clientId = this._parseString()\n    if (clientId === null) return this._emitError(new Error('Packet too short'))\n    packet.clientId = clientId\n    debug('_parseConnect: packet.clientId: %s', packet.clientId)\n\n    if (flags.will) {\n      if (packet.protocolVersion === 5) {\n        const willProperties = this._parseProperties()\n        if (Object.getOwnPropertyNames(willProperties).length) {\n          packet.will.properties = willProperties\n        }\n      }\n      // Parse will topic\n      topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse will topic'))\n      packet.will.topic = topic\n      debug('_parseConnect: packet.will.topic: %s', packet.will.topic)\n\n      // Parse will payload\n      payload = this._parseBuffer()\n      if (payload === null) return this._emitError(new Error('Cannot parse will payload'))\n      packet.will.payload = payload\n      debug('_parseConnect: packet.will.paylaod: %s', packet.will.payload)\n    }\n\n    // Parse username\n    if (flags.username) {\n      username = this._parseString()\n      if (username === null) return this._emitError(new Error('Cannot parse username'))\n      packet.username = username\n      debug('_parseConnect: packet.username: %s', packet.username)\n    }\n\n    // Parse password\n    if (flags.password) {\n      password = this._parseBuffer()\n      if (password === null) return this._emitError(new Error('Cannot parse password'))\n      packet.password = password\n    }\n    // need for right parse auth packet and self set up\n    this.settings = packet\n    debug('_parseConnect: complete')\n    return packet\n  }\n\n  _parseConnack () {\n    debug('_parseConnack')\n    const packet = this.packet\n\n    if (this._list.length < 1) return null\n    packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)\n\n    if (this.settings.protocolVersion === 5) {\n      if (this._list.length >= 2) {\n        packet.reasonCode = this._list.readUInt8(this._pos++)\n      } else {\n        packet.reasonCode = 0\n      }\n    } else {\n      if (this._list.length < 2) return null\n      packet.returnCode = this._list.readUInt8(this._pos++)\n    }\n\n    if (packet.returnCode === -1 || packet.reasonCode === -1) return this._emitError(new Error('Cannot parse return code'))\n    // mqtt 5 properties\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n    debug('_parseConnack: complete')\n  }\n\n  _parsePublish () {\n    debug('_parsePublish')\n    const packet = this.packet\n    packet.topic = this._parseString()\n\n    if (packet.topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n    // Parse messageId\n    if (packet.qos > 0) if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    packet.payload = this._list.slice(this._pos, packet.length)\n    debug('_parsePublish: payload from buffer list: %o', packet.payload)\n  }\n\n  _parseSubscribe () {\n    debug('_parseSubscribe')\n    const packet = this.packet\n    let topic\n    let options\n    let qos\n    let rh\n    let rap\n    let nl\n    let subscription\n\n    if (packet.qos !== 1) {\n      return this._emitError(new Error('Wrong subscribe header'))\n    }\n\n    packet.subscriptions = []\n\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    while (this._pos < packet.length) {\n      // Parse topic\n      topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n      if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))\n\n      options = this._parseByte()\n      qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK\n      nl = ((options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT) & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0\n      rap = ((options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT) & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0\n      rh = (options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT) & constants.SUBSCRIBE_OPTIONS_RH_MASK\n\n      subscription = { topic, qos }\n\n      // mqtt 5 options\n      if (this.settings.protocolVersion === 5) {\n        subscription.nl = nl\n        subscription.rap = rap\n        subscription.rh = rh\n      } else if (this.settings.bridgeMode) {\n        subscription.rh = 0\n        subscription.rap = true\n        subscription.nl = true\n      }\n\n      // Push pair to subscriptions\n      debug('_parseSubscribe: push subscription `%s` to subscription', subscription)\n      packet.subscriptions.push(subscription)\n    }\n  }\n\n  _parseSuback () {\n    debug('_parseSuback')\n    const packet = this.packet\n    this.packet.granted = []\n\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    // Parse granted QoSes\n    while (this._pos < this.packet.length) {\n      this.packet.granted.push(this._list.readUInt8(this._pos++))\n    }\n  }\n\n  _parseUnsubscribe () {\n    debug('_parseUnsubscribe')\n    const packet = this.packet\n\n    packet.unsubscriptions = []\n\n    // Parse messageId\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    while (this._pos < packet.length) {\n      // Parse topic\n      const topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n      // Push topic to unsubscriptions\n      debug('_parseUnsubscribe: push topic `%s` to unsubscriptions', topic)\n      packet.unsubscriptions.push(topic)\n    }\n  }\n\n  _parseUnsuback () {\n    debug('_parseUnsuback')\n    const packet = this.packet\n    if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'))\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n      // Parse granted QoSes\n      packet.granted = []\n      while (this._pos < this.packet.length) {\n        this.packet.granted.push(this._list.readUInt8(this._pos++))\n      }\n    }\n  }\n\n  // parse packets like puback, pubrec, pubrel, pubcomp\n  _parseConfirmation () {\n    debug('_parseConfirmation: packet.cmd: `%s`', this.packet.cmd)\n    const packet = this.packet\n\n    this._parseMessageId()\n\n    if (this.settings.protocolVersion === 5) {\n      if (packet.length > 2) {\n        // response code\n        packet.reasonCode = this._parseByte()\n        debug('_parseConfirmation: packet.reasonCode `%d`', packet.reasonCode)\n      } else {\n        packet.reasonCode = 0\n      }\n\n      if (packet.length > 3) {\n        // properies mqtt 5\n        const properties = this._parseProperties()\n        if (Object.getOwnPropertyNames(properties).length) {\n          packet.properties = properties\n        }\n      }\n    }\n\n    return true\n  }\n\n  // parse disconnect packet\n  _parseDisconnect () {\n    const packet = this.packet\n    debug('_parseDisconnect')\n\n    if (this.settings.protocolVersion === 5) {\n      // response code\n      if (this._list.length > 0) {\n        packet.reasonCode = this._parseByte()\n      } else {\n        packet.reasonCode = 0\n      }\n      // properies mqtt 5\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    debug('_parseDisconnect result: true')\n    return true\n  }\n\n  // parse auth packet\n  _parseAuth () {\n    debug('_parseAuth')\n    const packet = this.packet\n\n    if (this.settings.protocolVersion !== 5) {\n      return this._emitError(new Error('Not supported auth packet for this version MQTT'))\n    }\n\n    // response code\n    packet.reasonCode = this._parseByte()\n    // properies mqtt 5\n    const properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n\n    debug('_parseAuth: result: true')\n    return true\n  }\n\n  _parseMessageId () {\n    const packet = this.packet\n\n    packet.messageId = this._parseNum()\n\n    if (packet.messageId === null) {\n      this._emitError(new Error('Cannot parse messageId'))\n      return false\n    }\n\n    debug('_parseMessageId: packet.messageId %d', packet.messageId)\n    return true\n  }\n\n  _parseString (maybeBuffer) {\n    const length = this._parseNum()\n    const end = length + this._pos\n\n    if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n    const result = this._list.toString('utf8', this._pos, end)\n    this._pos += length\n    debug('_parseString: result: %s', result)\n    return result\n  }\n\n  _parseStringPair () {\n    debug('_parseStringPair')\n    return {\n      name: this._parseString(),\n      value: this._parseString()\n    }\n  }\n\n  _parseBuffer () {\n    const length = this._parseNum()\n    const end = length + this._pos\n\n    if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n    const result = this._list.slice(this._pos, end)\n\n    this._pos += length\n    debug('_parseBuffer: result: %o', result)\n    return result\n  }\n\n  _parseNum () {\n    if (this._list.length - this._pos < 2) return -1\n\n    const result = this._list.readUInt16BE(this._pos)\n    this._pos += 2\n    debug('_parseNum: result: %s', result)\n    return result\n  }\n\n  _parse4ByteNum () {\n    if (this._list.length - this._pos < 4) return -1\n\n    const result = this._list.readUInt32BE(this._pos)\n    this._pos += 4\n    debug('_parse4ByteNum: result: %s', result)\n    return result\n  }\n\n  _parseVarByteNum (fullInfoFlag) {\n    debug('_parseVarByteNum')\n    const maxBytes = 4\n    let bytes = 0\n    let mul = 1\n    let value = 0\n    let result = false\n    let current\n    const padding = this._pos ? this._pos : 0\n\n    while (bytes < maxBytes && (padding + bytes) < this._list.length) {\n      current = this._list.readUInt8(padding + bytes++)\n      value += mul * (current & constants.VARBYTEINT_MASK)\n      mul *= 0x80\n\n      if ((current & constants.VARBYTEINT_FIN_MASK) === 0) {\n        result = true\n        break\n      }\n      if (this._list.length <= bytes) {\n        break\n      }\n    }\n\n    if (!result && bytes === maxBytes && this._list.length >= bytes) {\n      this._emitError(new Error('Invalid variable byte integer'))\n    }\n\n    if (padding) {\n      this._pos += bytes\n    }\n\n    result = result\n      ? fullInfoFlag ? {\n        bytes,\n        value\n      } : value\n      : false\n\n    debug('_parseVarByteNum: result: %o', result)\n    return result\n  }\n\n  _parseByte () {\n    let result\n    if (this._pos < this._list.length) {\n      result = this._list.readUInt8(this._pos)\n      this._pos++\n    }\n    debug('_parseByte: result: %o', result)\n    return result\n  }\n\n  _parseByType (type) {\n    debug('_parseByType: type: %s', type)\n    switch (type) {\n      case 'byte': {\n        return this._parseByte() !== 0\n      }\n      case 'int8': {\n        return this._parseByte()\n      }\n      case 'int16': {\n        return this._parseNum()\n      }\n      case 'int32': {\n        return this._parse4ByteNum()\n      }\n      case 'var': {\n        return this._parseVarByteNum()\n      }\n      case 'string': {\n        return this._parseString()\n      }\n      case 'pair': {\n        return this._parseStringPair()\n      }\n      case 'binary': {\n        return this._parseBuffer()\n      }\n    }\n  }\n\n  _parseProperties () {\n    debug('_parseProperties')\n    const length = this._parseVarByteNum()\n    const start = this._pos\n    const end = start + length\n    const result = {}\n    while (this._pos < end) {\n      const type = this._parseByte()\n      if (!type) {\n        this._emitError(new Error('Cannot parse property code type'))\n        return false\n      }\n      const name = constants.propertiesCodes[type]\n      if (!name) {\n        this._emitError(new Error('Unknown property'))\n        return false\n      }\n      // user properties process\n      if (name === 'userProperties') {\n        if (!result[name]) {\n          result[name] = Object.create(null)\n        }\n        const currentUserProperty = this._parseByType(constants.propertiesTypes[name])\n        if (result[name][currentUserProperty.name]) {\n          if (Array.isArray(result[name][currentUserProperty.name])) {\n            result[name][currentUserProperty.name].push(currentUserProperty.value)\n          } else {\n            const currentValue = result[name][currentUserProperty.name]\n            result[name][currentUserProperty.name] = [currentValue]\n            result[name][currentUserProperty.name].push(currentUserProperty.value)\n          }\n        } else {\n          result[name][currentUserProperty.name] = currentUserProperty.value\n        }\n        continue\n      }\n      if (result[name]) {\n        if (Array.isArray(result[name])) {\n          result[name].push(this._parseByType(constants.propertiesTypes[name]))\n        } else {\n          result[name] = [result[name]]\n          result[name].push(this._parseByType(constants.propertiesTypes[name]))\n        }\n      } else {\n        result[name] = this._parseByType(constants.propertiesTypes[name])\n      }\n    }\n    return result\n  }\n\n  _newPacket () {\n    debug('_newPacket')\n    if (this.packet) {\n      this._list.consume(this.packet.length)\n      debug('_newPacket: parser emit packet: packet.cmd: %s, packet.payload: %s, packet.length: %d', this.packet.cmd, this.packet.payload, this.packet.length)\n      this.emit('packet', this.packet)\n    }\n    debug('_newPacket: new packet')\n    this.packet = new Packet()\n\n    this._pos = 0\n\n    return true\n  }\n\n  _emitError (err) {\n    debug('_emitError')\n    this.error = err\n    this.emit('error', err)\n  }\n}\n\nmodule.exports = Parser\n"},"lineCount":717}},"error":null,"hash":"80517440b691f3146c10cf0fb4833412","cacheData":{"env":{}}}