{"id":"node_modules/mqtt-packet/numbers.js","dependencies":[{"name":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/package.json","includedInParent":true,"mtime":1646316396171},{"name":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/package.json","includedInParent":true,"mtime":499162500000},{"name":"buffer","parent":"/Users/samuelobeng/WebstormProjects/DFP2022/df-project-lettuce/Front-end/node_modules/mqtt-packet/numbers.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst max = 65536\nconst cache = {}\n\n// in node 6 Buffer.subarray returns a Uint8Array instead of a Buffer\n// later versions return a Buffer\n// alternative is Buffer.slice but that creates a new buffer\n// creating new buffers takes time\n// SubOk is only false on node < 8\nconst SubOk = Buffer.isBuffer(Buffer.from([1, 2]).subarray(0, 1))\n\nfunction generateBuffer (i) {\n  const buffer = Buffer.allocUnsafe(2)\n  buffer.writeUInt8(i >> 8, 0)\n  buffer.writeUInt8(i & 0x00FF, 0 + 1)\n\n  return buffer\n}\n\nfunction generateCache () {\n  for (let i = 0; i < max; i++) {\n    cache[i] = generateBuffer(i)\n  }\n}\n\nfunction genBufVariableByteInt (num) {\n  const maxLength = 4 // max 4 bytes\n  let digit = 0\n  let pos = 0\n  const buffer = Buffer.allocUnsafe(maxLength)\n\n  do {\n    digit = num % 128 | 0\n    num = num / 128 | 0\n    if (num > 0) digit = digit | 0x80\n\n    buffer.writeUInt8(digit, pos++)\n  } while (num > 0 && pos < maxLength)\n\n  if (num > 0) {\n    pos = 0\n  }\n\n  return SubOk ? buffer.subarray(0, pos) : buffer.slice(0, pos)\n}\n\nfunction generate4ByteBuffer (num) {\n  const buffer = Buffer.allocUnsafe(4)\n  buffer.writeUInt32BE(num, 0)\n  return buffer\n}\n\nmodule.exports = {\n  cache,\n  generateCache,\n  generateNumber: generateBuffer,\n  genBufVariableByteInt,\n  generate4ByteBuffer\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/mqtt-packet/numbers.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}}],"sources":{"node_modules/mqtt-packet/numbers.js":"const max = 65536\nconst cache = {}\n\n// in node 6 Buffer.subarray returns a Uint8Array instead of a Buffer\n// later versions return a Buffer\n// alternative is Buffer.slice but that creates a new buffer\n// creating new buffers takes time\n// SubOk is only false on node < 8\nconst SubOk = Buffer.isBuffer(Buffer.from([1, 2]).subarray(0, 1))\n\nfunction generateBuffer (i) {\n  const buffer = Buffer.allocUnsafe(2)\n  buffer.writeUInt8(i >> 8, 0)\n  buffer.writeUInt8(i & 0x00FF, 0 + 1)\n\n  return buffer\n}\n\nfunction generateCache () {\n  for (let i = 0; i < max; i++) {\n    cache[i] = generateBuffer(i)\n  }\n}\n\nfunction genBufVariableByteInt (num) {\n  const maxLength = 4 // max 4 bytes\n  let digit = 0\n  let pos = 0\n  const buffer = Buffer.allocUnsafe(maxLength)\n\n  do {\n    digit = num % 128 | 0\n    num = num / 128 | 0\n    if (num > 0) digit = digit | 0x80\n\n    buffer.writeUInt8(digit, pos++)\n  } while (num > 0 && pos < maxLength)\n\n  if (num > 0) {\n    pos = 0\n  }\n\n  return SubOk ? buffer.subarray(0, pos) : buffer.slice(0, pos)\n}\n\nfunction generate4ByteBuffer (num) {\n  const buffer = Buffer.allocUnsafe(4)\n  buffer.writeUInt32BE(num, 0)\n  return buffer\n}\n\nmodule.exports = {\n  cache,\n  generateCache,\n  generateNumber: generateBuffer,\n  genBufVariableByteInt,\n  generate4ByteBuffer\n}\n"},"lineCount":60}},"error":null,"hash":"5b878be80c087db653d89935fea23b2b","cacheData":{"env":{}}}