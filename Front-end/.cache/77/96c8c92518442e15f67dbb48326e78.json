{"id":"node_modules/mqtt-packet/generate.js","dependencies":[{"name":"/Users/samuelobeng/Documents/Projects/df-project-lettuce/Front-end/package.json","includedInParent":true,"mtime":1646838750508},{"name":"/Users/samuelobeng/Documents/Projects/df-project-lettuce/Front-end/node_modules/mqtt-packet/package.json","includedInParent":true,"mtime":1646837063337},{"name":"./writeToStream","loc":{"line":1,"column":30,"index":30},"parent":"/Users/samuelobeng/Documents/Projects/df-project-lettuce/Front-end/node_modules/mqtt-packet/generate.js","resolved":"/Users/samuelobeng/Documents/Projects/df-project-lettuce/Front-end/node_modules/mqtt-packet/writeToStream.js"},{"name":"events","loc":{"line":2,"column":29,"index":78},"parent":"/Users/samuelobeng/Documents/Projects/df-project-lettuce/Front-end/node_modules/mqtt-packet/generate.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/events/events.js"},{"name":"buffer","parent":"/Users/samuelobeng/Documents/Projects/df-project-lettuce/Front-end/node_modules/mqtt-packet/generate.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nconst writeToStream = require('./writeToStream')\nconst EventEmitter = require('events')\n\nfunction generate (packet, opts) {\n  const stream = new Accumulator()\n  writeToStream(packet, stream, opts)\n  return stream.concat()\n}\n\nclass Accumulator extends EventEmitter {\n  constructor () {\n    super()\n    this._array = new Array(20)\n    this._i = 0\n  }\n\n  write (chunk) {\n    this._array[this._i++] = chunk\n    return true\n  }\n\n  concat () {\n    let length = 0\n    const lengths = new Array(this._array.length)\n    const list = this._array\n    let pos = 0\n    let i\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') lengths[i] = list[i].length\n      else lengths[i] = Buffer.byteLength(list[i])\n\n      length += lengths[i]\n    }\n\n    const result = Buffer.allocUnsafe(length)\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') {\n        list[i].copy(result, pos)\n        pos += lengths[i]\n      } else {\n        result.write(list[i], pos)\n        pos += lengths[i]\n      }\n    }\n\n    return result\n  }\n}\n\nmodule.exports = generate\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/mqtt-packet/generate.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/mqtt-packet/generate.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}}],"sources":{"node_modules/mqtt-packet/generate.js":"const writeToStream = require('./writeToStream')\nconst EventEmitter = require('events')\n\nfunction generate (packet, opts) {\n  const stream = new Accumulator()\n  writeToStream(packet, stream, opts)\n  return stream.concat()\n}\n\nclass Accumulator extends EventEmitter {\n  constructor () {\n    super()\n    this._array = new Array(20)\n    this._i = 0\n  }\n\n  write (chunk) {\n    this._array[this._i++] = chunk\n    return true\n  }\n\n  concat () {\n    let length = 0\n    const lengths = new Array(this._array.length)\n    const list = this._array\n    let pos = 0\n    let i\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') lengths[i] = list[i].length\n      else lengths[i] = Buffer.byteLength(list[i])\n\n      length += lengths[i]\n    }\n\n    const result = Buffer.allocUnsafe(length)\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') {\n        list[i].copy(result, pos)\n        pos += lengths[i]\n      } else {\n        result.write(list[i], pos)\n        pos += lengths[i]\n      }\n    }\n\n    return result\n  }\n}\n\nmodule.exports = generate\n"},"lineCount":54}},"error":null,"hash":"9bdc994fb48507b6e7b7e33312c9d593","cacheData":{"env":{}}}